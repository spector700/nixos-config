#
#  bspwm configuration
#
#  flake.nix
#   ├─ ./hosts
#   │   └─ ./<host>
#   │       └─ default.nix
#   └─ ./modules
#       └─ ./desktop
#           └─ ./bspwm.nix
#               └─ default.nix *
#

{

  xsession.windowManager.bspwm = {
      enable = true;
      extraConfig = ''
        # Terminate already running polybar, eww, picom, sxhkd and dunst instances
        processes=("picom" "polybar" "sxhkd" "dunst")

        for process in "''${processes[@]}"; do
          if pidof -q "$process"; then
            pkill -x "$process" > /dev/null; sleep 0.1
          fi
        done

        #autostart
        polybar &
        picom --config ~/.config/picom/picom.conf &
        sxhkd &
        feh --bg-fill ~/.config/wallpaper/the_valley.webp
        #xsetroot -cursor_name left_ptr &
        polybar &
        dunst -config ~/.config/dunst/dunstrc &
      '';
      monitor = {
          DP-3 = [
            "1"
            "2"
            "3"
            "4"
            "5"
          ];
          DP-2 = [
            "6"
          ];
        };
      settings = {
          remove_unplugged_monitors = true;
          remove_disabled_monitors = true;
          border_width = 2;
          window_gap = 7;
          normal_border_color = "#C574DD";
          active_border_color = "#C574DD";
          focused_border_color = "#8897F4";
          presel_feedback_color = "#FF4971";
          split_ratio = 0.5;
          focus_follows_pointer = true;
          pointer_modifier = "super";
          single_monocle = false;
          borderless_monocule = false;
          gapless_monocle = false;
          paddingless_monoclue = true;

        };
      # Use command "xprop | grep WM_CLASS" to find the name of the application to be entered below
      # After the command click on the application window and the name will be generated after the command and use the name generated by this command.
      # Search "Bare-bones window manager by Angad Sharma" on dev.to for more
      rules = {
        "Gimp" = {
            desktop = "^7";
            follow = true;
          };
        "wine" = {
            desktop = "^8";
            state = "floating";
            follow = true;
          };
        "variety" = {
            state = "floating";
          };
        "Discord" = {
            desktop = "^4";
          };
        };
    };

    services.sxhkd = {
        enable = true;
        extraConfig = ''

super + r	
    rofi -show drun

#Terminal
super + {_,shift + }x
  {kitty, bspc node -s biggest.local}

#flameshot
Print
  flameshot gui

#Thunar
super + {e,n}
  {thunar,kitty -e ranger}

#Brave / Brave Private
super + {b,shift+b}
  {brave, brave -private-window}
  
#SXHKD KEY BINDS
super + h
  sh ~/.config/rofi/scripts/sxhkd_help
  
#toggle polybar
super + z
  ~/.config/polybar/toggle-polybar.sh

#toggle picom
super + shift + p
  ~/.config/picom/picom.sh
  
#increase volume 
XF86AudioRaiseVolume
  pactl set-sink-volume 0 +5%

#decrease volume	
XF86AudioLowerVolume
  pactl set-sink-volume 0 -5%

#mute key
XF86AudioMute
  pactl set-sink-mute 0 toggle

#music control keys
{XF86AudioPlay,XF86AudioNext,XF86AudioPrev}
  playerctl {play-pause,next,previous}

###########################################
####           BSPWM         ####
###########################################

#close and kill
super + {_, shift + }q
  bspc node -{c}

#Reload SXHKD
super + shift + e
        pkill -USR1 -x sxhkd

#Quit/Restart BSPWM
super + shift + ctrl + {q,r}
        bspc {quit,wm -r}

#alternate between the tiled and monocle layout
super + m
  bspc desktop -l next

#send the newest marked node to the newest preselected node
super + y
  bspc node newest.marked.local -n newest.!automatic.local

#swap the current node and the biggest window
super + g
  bspc node -s biggest.window


###########################################
####         state/flags      ####
###########################################

#set the window state
super + {t,shift + t,s,f}
  bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

#set the node flags
super + ctrl + {m,x,y,z}
  bspc node -g {marked,locked,sticky,private}



###########################################
####         focus/swap        ####
###########################################

#focus the node in the given direction
super + {_,shift + }{h,j,k,l}
  bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
  bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
  bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
  bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
  bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
  bspc wm -h off; \
  bspc node {older,newer} -f; \
  bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
  bspc {desktop -f,node -d} '^{1-9,10}'



###########################################
####       preselect         ####
###########################################

# preselect the direction
super + ctrl + {h,j,k,l}
  bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
  bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
  bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
  bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel



###########################################
####   move/resize        ####
###########################################

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
  bspc node -z {left -10 0,bottom 0 10,top 0 -10,right 10 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
  bspc node -z {right -10 0,top 0 10,bottom 0 -10,left 10 0}

# move a floating window
super + shift + {Left,Down,Up,Right}
  bspc node -v {-10 0,0 10,0 -10,10 0}
  
###########################################
#### 	shutdown/restart	   ####
###########################################
super + {_, ctrl + }r
        sudo shutdown -r now
        
super + {_, ctrl + }p
        sudo shutdown -h now
        '';
      };
}
